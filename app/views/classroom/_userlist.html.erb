<script src="http://js.pusher.com/1.11/pusher.min.js"></script>
<script type="text/javascript">


connect();
var pusher = new Pusher('994bb8883e904a01481e');

Pusher.channel_auth_endpoint = '/pusher/auth';

var pc = pusher.subscribe('presence-channel-<%= params[:id] %>');



pc.bind('thing_create', function(thing) {
	if ($("p").first().text().substring(2)=='<%= current_user.email %>') {
		window.location.reload();
	}
});


pc.bind('pusher:subscription_succeeded', function(members) {
	members.each(function(member) {
	
	add_member(member.id, member.info);
	
  });
	pusher_conn=true;
	publish_first();
	if (TA_presence == 0){
		notify_TA();
		alert("your TA is not here yet but has been notified");
	}
});

pc.bind('pusher:member_added', function(member) {

	add_member(member.id, member.info);
	
});

pc.bind('pusher:member_removed', function(member) {
	remove_member(member.id,member.info);
	publish_first()
});

 function publish_first(){
	email=$("p").first().text().substring(2);
	if  (email == "<%= current_user.email %>") {
		alert("You are the next on line!");
		user_go=true;
	}
publish(); 
}


function add_member(id,info){
	var name=info.name
	var text ="<p class='user-"+name+"'> <img src='/assets/online.gif'/> "+info.email+"</p>"
	remove_member(id,info);
	if (info.email != '<%= @user.email %>'){
	$("#status").append(text);
	}
	if(id.email == '<%= params[:id] %>@columbia.edu'){
		TA_presence=1;
	}
}

function remove_member(id,info){
	var name=info.name
	var text=".user-"+name
	$(text).remove();
	//console.log(id)	
}
function SortByTime(a, b){
  var atime = a[2];
  var btime = b[2]; 
  return ((atime > btime) ? -1 : ((atime < btime) ? 1 : 0));
}

function get_queue(members){
	var member_name=[];
	var member_id=[];
	var member_date=[];
	var i=1;
	members.each(function(member) {
		member_name.push(member.info.name);
		member_id.push(member.id);
		member_date.push(member.info.arrived_at);
		console.log(member);
		i=i+1;
	  });
	var tableau=[member_name,member_id,member_date]
	var transposed = $.transpose(tableau);
	
	Matrix=transposed.sort(SortByTime);
	console.log(transposed);
	console.log(Matrix);
	
}

function remove_user(tab,user_id){
var new_tab
var j=0
	for(var i = 0; i <= tab.length-1; i--){
	    if(tab[i][1] != user_id){ 
		    j=j+1
	        new_tab[j]=tab[i]
	    }
	}

}



</script>



</div>
</div>